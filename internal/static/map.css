#mapBase {
	height: 100%;
}

#map {
	cursor: var(--outline-cursor);
	background-color: #fff;
	overflow: visible;
	outline: none;
}

.isUser #map {
	overflow: hidden;
	cursor: grab;
}

.isUser.dragging #map {
	cursor: grabbing;
}

#map > g:not(#outline) {
	clip-path: view-box;
}

.isUser.sliding #map {
	transition-property: left, top;
	transition-duration: 1s;
	transition-timing-function: ease;
}

#outline {
	outline: none;
}

#outline rect {
	stroke-width: calc(1px / var(--zoom, 1));
	stroke: #000;
	width: calc(10px / var(--zoom, 1));
	height: calc(10px / var(--zoom, 1));
	fill: #f00;
}

#outline rect:nth-child(1) {
	width: var(--outline-width);
	height: var(--outline-height);
	fill: transparent;
	cursor: var(--outline-cursor, move);
}

#outline rect:nth-child(2) {
	x: calc(var(--outline-width) / 2 - 5px / var(--zoom, 1));
	y: calc(-20px / var(--zoom, 1));
	cursor: var(--outline-cursor, cell);
}

#outline rect:nth-child(3) {
	x: calc(-5px / var(--zoom, 1));
	y: calc(-5px / var(--zoom, 1));
}

#outline rect:nth-child(4) {
	x: calc(var(--outline-width) / 2 - 5px / var(--zoom, 1));
	y: calc(-5px / var(--zoom, 1));
}

#outline rect:nth-child(5) {
	x: calc(var(--outline-width) - 5px / var(--zoom, 1));
	y: calc(-5px / var(--zoom, 1));
}

#outline rect:nth-child(6) {
	x: calc(-5px / var(--zoom, 1));
	y: calc(var(--outline-height) / 2 - 5px / var(--zoom, 1));
}

#outline rect:nth-child(7) {
	x: calc(var(--outline-width) - 5px / var(--zoom, 1));
	y: calc(var(--outline-height) / 2 - 5px / var(--zoom, 1));
}

#outline rect:nth-child(8) {
	x: calc(-5px / var(--zoom, 1));
	y: calc(var(--outline-height) - 5px / var(--zoom, 1));
}

#outline rect:nth-child(9) {
	x: calc(var(--outline-width) / 2 - 5px / var(--zoom, 1));
	y: calc(var(--outline-height) - 5px / var(--zoom, 1));
}

#outline rect:nth-child(10) {
	x: calc(var(--outline-width) - 5px / var(--zoom, 1));
	y: calc(var(--outline-height) - 5px / var(--zoom, 1));
}

.cursor_0 :is(rect:nth-child(3), rect:nth-child(10)), .cursor_1 :is(rect:nth-child(6), rect:nth-child(7)), .cursor_2 :is(rect:nth-child(5), rect:nth-child(8)), .cursor_3 :is(rect:nth-child(4), rect:nth-child(9)) {
	cursor: var(--outline-cursor, nwse-resize);
}

.cursor_0 :is(rect:nth-child(4), rect:nth-child(9)), .cursor_1 :is(rect:nth-child(3), rect:nth-child(10)), .cursor_2 :is(rect:nth-child(6), rect:nth-child(7)), .cursor_3 :is(rect:nth-child(5), rect:nth-child(8)) {
	cursor: var(--outline-cursor, ns-resize);
}

.cursor_0 :is(rect:nth-child(5), rect:nth-child(8)), .cursor_1 :is(rect:nth-child(4), rect:nth-child(9)), .cursor_2 :is(rect:nth-child(3), rect:nth-child(10)), .cursor_3 :is(rect:nth-child(6), rect:nth-child(7)) {
	cursor: var(--outline-cursor, nesw-resize);
}

.cursor_0 :is(rect:nth-child(6), rect:nth-child(7)), .cursor_1 :is(rect:nth-child(5), rect:nth-child(8)), .cursor_2 :is(rect:nth-child(4), rect:nth-child(9)), .cursor_3 :is(rect:nth-child(3), rect:nth-child(10)) {
	cursor: var(--outline-cursor, ew-resize);
}

.isAdmin .hiddenLayer {
	opacity: var(--hiddenLayerOpacity, 0.5);
	display: block;
}

.isAdmin .hiddenLayer.selectedLayer {
	opacity: var(--hiddenLayerSelectedOpacity, 0.5);

.hiddenLayer, #layerLight.hiddenLayer,  #layerGrid.hiddenLayer {
	display: none;
}

.isUser :is(.mapToken, .mapShape, .mapDrawing) {
	transition-property: transform, width, height;
	transition-duration: 1s;
	transition-timing-function: ease;
}

#mapLoading {
	background-color: #fff;
	position: fixed;
	top: 0;
	left: 0;
	bottom: 0;
	right: 0;
}

#mapLoading > div {
	display: flex;
	align-items: center;
	justify-content: center;
	flex-wrap: wrap;
	height: 100%;
}

#mapLoading progress {
	margin: 0 1em;
}
